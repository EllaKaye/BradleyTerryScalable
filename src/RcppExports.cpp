// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// BT_EM
List BT_EM(S4 W, double a, double b, int maxit, double epsilon);
RcppExport SEXP SBT_BT_EM(SEXP WSEXP, SEXP aSEXP, SEXP bSEXP, SEXP maxitSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(BT_EM(W, a, b, maxit, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// btprob_vec
arma::mat btprob_vec(arma::vec pi);
RcppExport SEXP SBT_btprob_vec(SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(btprob_vec(pi));
    return rcpp_result_gen;
END_RCPP
}
// ILSR
List ILSR(S4 W, int maxit, double epsilon);
RcppExport SEXP SBT_ILSR(SEXP WSEXP, SEXP maxitSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(ILSR(W, maxit, epsilon));
    return rcpp_result_gen;
END_RCPP
}
