Package: SBT
Type: Package
Title: Fits the Bradley-Terry Model to Potentially Large and Sparse Networks of
    Comparison Data
Version: 0.1.0
Authors@R: c(
  person("Ella", "Kaye", email = "E.Kaye.1@warwick.ox.ac.uk", role = c("aut", "cre")),
  person("David", "Firth", role = c("aut")))
Maintainer: Ella Kaye <E.Kaye.1@warwick.ac.uk>
Description: The Bradley-Terry model is a popular method for finding the
    probabilities for each item in a set being preferred over each of the others,
    based on repeated pairwise comparisons between the elements of the set. The
    model is used to assign a strength parameter to each item in the set, which
    can then be used to rank the items. Because of the model's popularity in a
    sporting context, throughout the documentation we will refer to the items as
    players, a comparison between them as a contest and the outcome of the contest
    as a win for one player and a loss for the other; ties are not permitted. A
    number of algorithms have been proposed for finding the MLE of the Bradley-Terry
    model, for example the MM-algorithm and the ILSR algorithm. However, certain
    assumptions about data configuration are required to ensure that a unique and
    finite MLE exists. Consider the graph where the players are the nodes and there
    is a directed edge from player i to player j if player i has beaten player j
    at least once. Then a unique and finite MLE exists if and only iff this graph
    is fully connected. There are two approaches available in this package when
    the graph is not fully connected. One is to find the MLE separately for each
    fully connected component of the graph. The other is to take a Bayesian approach
    on the whole dataset, which may also be thought of as penalising the strength
    parameters to ensure that none are zero or infinite. In this package there are
    implementions of all these approaches to estimating the strength parameters, as
    well as a function to help the user determine which approaches are suitable for
    their data, and a helper function to ensure that the data is in the appropriate
    format for the main functions.
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports:
    igraph,
    Matrix,
    Rcpp (>= 0.12.7)
LinkingTo: Rcpp, RcppArmadillo
RoxygenNote: 5.0.1
Suggests: Matrix.utils
